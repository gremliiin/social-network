{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/WithAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogsItem","props","className","s","dialog","active","to","id","message","Message","messages","maxlength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","requiredField","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","key","messagesElements","dialogsItems","values","sendMessageCreator","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,0B,6JCW5FC,EARK,SAACC,GACjB,OACQ,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,IAAKN,EAAMO,W,kBCI7CC,EAPC,SAACR,GAEb,OACQ,yBAAKC,UAAWC,IAAEO,UAAWT,EAAMO,U,kCCCxCG,EAAcC,YAAiB,IA2ChCC,EAAsBC,YAAU,CAElCC,KAAM,wBAFkBD,EAhBL,SAACb,GACpB,OACI,0BAAMe,SAAUf,EAAMgB,cAEd,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,KAAM,iBAAkBC,YAAa,qBAC1DC,SAAU,CAACC,IAAeb,MAGzC,6BACI,6CAYDc,EA/CC,SAACxB,GAEb,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAA1B,GAAM,OAAI,kBAAC,EAAD,CAAaI,QAASJ,EAAOiB,KAChBU,IAAK3B,EAAOG,GAAIA,GAAIH,EAAOG,QACtFyB,EAAmBN,EAAMhB,SAASoB,KAAI,SAAAtB,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASuB,IAAKvB,EAAQD,QAMrG,OACI,yBAAKL,UAAWC,IAAE0B,SACd,yBAAK3B,UAAWC,IAAE8B,cACbL,GAEL,yBAAK1B,UAAWC,IAAEO,UACd,6BAAMsB,GACN,6BAAK,kBAACnB,EAAD,CAAqBG,SAXlB,SAACkB,GACjBjC,EAAMkC,mBAAmBD,EAAOE,uB,gDCfpCC,EAA6B,SAACX,GAAD,MAAY,CACzCY,OAAQZ,EAAMa,KAAKD,S,OCgBRE,sBACXC,aAfkB,SAACf,GACnB,MAAM,CACFC,YAAaD,EAAMC,gBAIF,SAACe,GACtB,MAAM,CACFP,mBAAoB,SAACC,GACjBM,EAASP,YAAmBC,UDRR,SAACO,GAAe,IACxCC,EADuC,uKAGnC,OAAIC,KAAK5C,MAAMqC,OAER,kBAACK,EAAcE,KAAK5C,OAFG,kBAAC,IAAD,CAAUK,GAAI,eAHT,GACbwC,IAAMH,WAUpC,OAFqCF,YAAQJ,EAARI,CAAoCG,KCI9DJ,CAGbf","file":"static/js/3.994fc36e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1G54d\",\"dialogsItems\":\"Dialogs_dialogsItems__3qGsU\",\"active\":\"Dialogs_active__1-fJd\"};","import React from 'react';\r\nimport s from './DialogsItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogsItem = (props) =>{\r\n    return(\r\n            <div className={s.dialog + ' ' + s.active}>\r\n                <NavLink to={\"/dialogs/\" + props.id}>{props.message}</NavLink>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default DialogsItem;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n            <div className={s.messages}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\n\r\nconst  maxlength50 = maxLengthCreator(50);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(dialog => <DialogsItem message={dialog.name}\r\n                                                                   key={dialog.id} id={dialog.id}/>);\r\n    let messagesElements = state.messages.map(message => <Message message={message.message} key={message.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessageCreator(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div><AddMessageFormRedux onSubmit={addNewMessage} /></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n                <div>\r\n                    <Field component={Textarea} name={\"newMessageBody\"} placeholder={\"Enter your message\"}\r\n                           validate={[requiredField, maxlength50]}/>\r\n                </div>\r\n\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    // a unique name for the form\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm);\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n  }\r\n\r\n    let connectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return connectedAuthRedirectComponent;\r\n\r\n};","import React from 'react';\r\nimport {sendMessageCreator} from \"../../Redux/DialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        sendMessageCreator: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect,\r\n)(Dialogs);"],"sourceRoot":""}