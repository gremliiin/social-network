{"version":3,"sources":["assets/images/defaultAvatar.jpg","Redux/DialogsReducer.js","assets/images/preloader.gif","components/common/Preloader/preloader.module.css","components/Navbar/Navbar.module.css","api/api.js","components/Users/Users.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","Redux/UsersReducer.js","components/common/Paginator/UsersPaginator.js","components/Users/User.js","components/Users/Users.js","Redux/usersSelectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","Redux/authReducer.js","components/Header/HeaderContainer.jsx","login/login.js","Redux/appReducer.js","Redux/SidebarReducer.js","Redux/reduxStore.js","App.js","index.js","components/common/Preloader/preloader.js","components/common/FormsControls/FormsControl.module.css","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Header/Header.module.css","Redux/ProfileReducer.js"],"names":["module","exports","initialState","dialogs","id","name","messages","message","newMessageBody","sendMessageCreator","type","dialogsReducer","state","action","body","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","activeLink","News","props","Music","Settings","users","totalUsersCount","isFetching","followingInProgress","followActionCreator","unfollowActionCreator","setCurrentPageActionCreator","pages","toggleIsFetchingActionCreator","toggleCount","toggleIsFollowingProgressActionCreator","toggleFollowing","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","map","followed","totalCount","filter","Paginator","pagesCount","Math","ceil","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","page","selectedPage","key","e","onPageChanged","User","user","src","photos","small","userPhoto","itemImg","disabled","some","Users","paginator","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getIsAuth","auth","isAuth","UsersAPIComponent","requestUsers","this","React","Component","compose","connect","UsersAPI","items","bind","Header","header","loginBlock","setAuthUserData","payload","getAuthUserData","AuthReducer","HeaderContainer","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Input","validate","requiredField","error","formSummaryError","length","stopSubmit","_error","formData","initialized","AppReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebarPage","authReducer","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","ProfileContainer","App","initializeApp","fallback","path","render","UsersContainer","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","Preloader","preloader","FormControl","input","meta","child","hasError","touched","formControl","children","Textarea","restProps","value","maxLengthCreator","maxlength","posts","likesCount","profile","addPostActionCreator","newMessagePost","setStatus","getUserProfile","newPost","p","postId"],"mappings":"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","file":"static/js/main.3c1f4ae3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultAvatar.52b4b4b4.jpg\";","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [{id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Valera'},\r\n        {id: 6, name: 'Viktor'},],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'},\r\n    ],\r\n    newMessageBody: '',\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case\r\n        SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}],\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.3cfca2cb.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__1d1An\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__f1vep\",\"item\":\"Navbar_item__2wU0A\",\"activeLink\":\"Navbar_activeLink__37OEc\"};","//import * as axios from 'axios';\r\n\r\nimport * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"95fa16f3-b49a-449a-825b-249cc43b8f11\",\r\n    },\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status/`, {status: status});\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`,)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post('auth/login', {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login');\r\n    }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemImg\":\"Users_itemImg__3NKMG\",\"selectedPage\":\"Users_selectedPage__2bFe0\",\"paginator\":\"Users_paginator__cN0Ht\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = (props) =>{\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = (props) =>{\r\n    return(\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = (props) =>{\r\n    return(\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import {usersAPI as UsersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(users => {\r\n                    if (users.id === action.userId) {\r\n                        return {...users, followed: true}\r\n                    }\r\n                    return users;\r\n                }),\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(users => {\r\n                    if (users.id === action.userId) {\r\n                        return {...users, followed: false}\r\n                    }\r\n                    return users;\r\n                }),\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.pages,\r\n            };\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount,\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.toggleCount,\r\n            };\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.toggleFollowing\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId),\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const followActionCreator = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowActionCreator = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsersActionCreator = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPageActionCreator = (pages) => ({type: SET_CURRENT_PAGE, pages});\r\nexport const setTotalUsersCountActionCreator = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount});\r\nexport const toggleIsFetchingActionCreator = (toggleCount) => ({type: TOGGLE_IS_FETCHING, toggleCount});\r\nexport const toggleIsFollowingProgressActionCreator = (toggleFollowing, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    toggleFollowing,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetchingActionCreator(true));\r\n    dispatch(setCurrentPageActionCreator(page));\r\n\r\n    let data = await UsersAPI.getUsers(page, pageSize);\r\n    dispatch(toggleIsFetchingActionCreator(false));\r\n    dispatch(setUsersActionCreator(data.items));\r\n    dispatch(setTotalUsersCountActionCreator(data.totalCount));\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleIsFollowingProgressActionCreator(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleIsFollowingProgressActionCreator(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, UsersAPI.follow.bind(userId), followActionCreator);\r\n\r\n};\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, UsersAPI.unfollow.bind(userId), unfollowActionCreator);\r\n};\r\n\r\n\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport s from '../../Users/Users.module.css';\r\n\r\n\r\nconst Paginator = (props) => {\r\n    let portionSize = 10;\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n    let currentPageInPaginator = props.currentPage;\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>Prev</button>\r\n            }\r\n            {pages.filter(pages => pages >= leftPortionPageNumber && pages <= rightPortionPageNumber)\r\n                .map((page) => {\r\n                    return <span className={props.currentPage === page && s.selectedPage}\r\n                                 key={page}\r\n                                 onClick={(e) => {\r\n                                     //setPortionNumber(portionNumber = (Math.floor(currentPageInPaginator) / portionSize) + 1);\r\n                                     props.onPageChanged(page);\r\n                                 }}> {page} </span>\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>Next</button>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport userPhoto from '../../assets/images/defaultAvatar.jpg';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst User = (props) => {\r\n\r\n\r\n    return (\r\n        <div className={s.users}>\r\n            <div>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + props.user.id}>\r\n                                 <img src={props.user.photos.small != null ? props.user.photos.small : userPhoto}\r\n                                      className={s.itemImg}/>\r\n                            </NavLink>\r\n                        </div>\r\n                    </span>\r\n                <span>\r\n                        {props.user.followed\r\n                            ? <button onClick={() => {\r\n                                props.unfollow(props.user.id);\r\n                            }} disabled={props.followingInProgress.some(id => id === props.user.id)}>Unfollow</button>\r\n                            : <button onClick={() => {\r\n                                props.follow(props.user.id)\r\n                            }} disabled={props.followingInProgress.some(id => id === props.user.id)}>Follow</button>}\r\n                    </span>\r\n                <span>\r\n                        <span>\r\n                            <div>{props.user.name}</div>\r\n                            <div>{props.user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{/*props.user.location.country*/}</div>\r\n                            <div>{/*props.user.location.city*/}</div>\r\n                        </span>\r\n                    </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport Paginator from \"../common/Paginator/UsersPaginator\";\r\nimport User from \"./User\";\r\n\r\n\r\nconst Users = (props) => {\r\n\r\n    return (\r\n        <div className={s.users}>\r\n            <>\r\n                <div className={s.paginator}>\r\n                    <Paginator totalUsersCount={props.totalUsersCount} pageSize={props.pageSize}\r\n                               onPageChanged={props.onPageChanged} currentPage={props.currentPage}/>\r\n                </div>\r\n                {\r\n                    props.users.map(users => <User user={users} key={users.id} unfollow={props.unfollow}\r\n                                                   follow={props.follow}\r\n                                                   disabled={props.disabled}\r\n                                                   followingInProgress={props.followingInProgress}/>)\r\n                }\r\n            </>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;","\r\n\r\nexport const getUsers = (state) => {\r\n      return (\r\n          state.usersPage.users\r\n      );\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n    return (\r\n        state.usersPage.pageSize\r\n    );\r\n};\r\n\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return (\r\n        state.usersPage.totalUsersCount\r\n    );\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return (\r\n        state.usersPage.currentPage\r\n    );\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return (\r\n        state.usersPage.isFetching\r\n    );\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return (\r\n        state.usersPage.followingInProgress\r\n    );\r\n};\r\n\r\nexport const getIsAuth = (state) => {\r\n    return (\r\n        state.auth.isAuth\r\n    );\r\n};\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    requestUsers, setCurrentPageActionCreator, unfollow,\r\n} from \"../../Redux/UsersReducer\";\r\nimport Users from './Users.js';\r\nimport Preloader from \"../common/Preloader/preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress, getIsAuth,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../Redux/usersSelectors\";\r\nimport s from \"./Users.module.css\";\r\nimport Paginator from \"../common/Paginator/UsersPaginator\";\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    };\r\n\r\n    onPageChanged = (pages) => {\r\n        this.props.requestUsers(pages, this.props.pageSize);\r\n    };\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> :\r\n\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize}\r\n                       onPageChanged={this.onPageChanged}\r\n                       currentPage={this.props.currentPage}\r\n                       follow={this.props.follow}\r\n                       unfollow={this.props.unfollow}\r\n                       users={this.props.users}\r\n                       followingInProgress={this.props.followingInProgress}\r\n                /> }\r\n                </>\r\n    }\r\n\r\n\r\n}\r\n\r\n/* let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}; */\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        isAuth: getIsAuth(state),\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {requestUsers, follow, unfollow,\r\n        setCurrentPageActionCreator}),\r\n)(UsersAPIComponent);\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n          <img src=\"https://logomaster.ai/static/media/gallery002.936afb9d.png\" />\r\n          <div className={s.loginBlock}>\r\n              {props.isAuth\r\n                  ? <div>{props.login} - <button onClick={props.logout}>logout</button></div>\r\n                  : <NavLink to={'/login'}>login</NavLink>}\r\n          </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n\r\n};\r\n\r\nconst AuthReducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return{\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth} });\r\n\r\nexport const getAuthUserData = () => async (dispatch) =>{\r\n    let response = await authAPI.me();\r\n\r\n        if(response.data.resultCode === 0){\r\n            let {id, email, login} = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n\r\n};\r\n\r\nexport const login = (email, password, rememberMe, isAuth) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, isAuth);\r\n        if(response.data.resultCode === 0){\r\n            dispatch(getAuthUserData());\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some Error\";\r\n            dispatch(stopSubmit(\"login\", {_error: message}));\r\n        }\r\n\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n        if(response.data.resultCode === 0){\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n\r\n};\r\n\r\n\r\n\r\nexport default AuthReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../Redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStatetoProps = (state) => ({\r\n   isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStatetoProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../components/common/FormsControls/FormsControls\";\r\nimport {requiredField} from \"../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../Redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from '../components/common/FormsControls/FormsControl.module.css';\r\n\r\n\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Email'} name={\"email\"} component={Input}\r\n                       validate={[requiredField]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'} name={\"password\"} component={Input} type={'password'}\r\n                       validate={[requiredField]}/>\r\n            </div>\r\n            <div>\r\n                <Field type={'checkbox'} name={\"rememberMe\"} component={Input}\r\n                       validate={[requiredField]}/>\r\n            </div>\r\n            {\r\n                props.error && <div className={s.formSummaryError}>\r\n                    {props.error}\r\n                </div>\r\n            }\r\n\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n            props.login(formData.email, formData.password, formData.rememberMe);\r\n    };\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect (mapStateToProps, {login}) (Login);","import {getAuthUserData} from \"./authReducer\";\r\n\r\n\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst AppReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setInitialized = () => ({type: SET_INITIALIZED});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n        dispatch(setInitialized());\r\n    });\r\n};\r\n\r\nexport default AppReducer;","\r\nlet initialState = {\r\n\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./ProfileReducer\";\r\nimport dialogsReducer from \"./DialogsReducer\";\r\nimport sidebarReducer from \"./SidebarReducer\";\r\nimport usersReducer from \"./UsersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport AppReducer from \"./appReducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebarPage: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: AppReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React, {Suspense} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./login/login\";\nimport {connect, Provider} from \"react-redux\";\nimport {initializeApp} from \"./Redux/appReducer\";\nimport Preloader from \"./components/common/Preloader/preloader\";\nimport {compose} from \"redux\";\nimport store from \"./Redux/reduxStore\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n\n            <BrowserRouter>\n                <div className=\"app-wrapper\">\n                    <HeaderContainer store={this.props.store}/>\n                    <Navbar/>\n                    <div className=\"app-wrapper-content\">\n                        <Suspense fallback={<div><Preloader/></div>}>\n                            <Route path=\"/dialogs\"\n                                   render={() => <DialogsContainer store={this.props.store}/>}/>\n                        </Suspense>\n\n                        <Suspense fallback={<div><Preloader/></div>}>\n                            <Route path=\"/profile/:userId?\"\n                                   render={() => <ProfileContainer store={this.props.store}/>}/>\n                        </Suspense>\n\n                        <Route path=\"/news\"\n                               render={News}/>\n                        <Route path=\"/music\"\n                               render={Music}/>\n                        <Route path=\"/settings\"\n                               render={Settings}/>\n                        <Route path=\"/users\"\n                               render={() => <UsersContainer store={this.props.store}/>}/>\n                        <Route path=\"/login\"\n                               render={() => <Login/>}/>\n                    </div>\n                </div>\n            </BrowserRouter>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized,\n});\n\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = (props) => {\n    return (\n        <BrowserRouter>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </BrowserRouter>\n    );\n};\n\nexport default SamuraiJSApp;","import React from 'react';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from \"react-dom\";\nimport SamuraiJSApp from \"./App\";\nimport store from \"./Redux/reduxStore\";\n\n\n\n    ReactDOM.render(<SamuraiJSApp store={store}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import preloader from \"../../../assets/images/preloader.gif\";\r\nimport React from \"react\";\r\nimport s from './preloader.module.css';\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div className={s.preloader}>\r\n            <img src={preloader}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__23Uw4\",\"error\":\"FormsControl_error__2Ko1d\",\"formSummaryError\":\"FormsControl_formSummaryError__3bXda\"};","import React from \"react\";\r\nimport s from './FormsControl.module.css';\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n\r\n    const{input, meta, ...restProps} = props;\r\n\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...meta} {...restProps}></textarea>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport const Input = (props) => {\r\n\r\n    const{input, meta, ...restProps} = props;\r\n\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...meta} {...restProps}/>\r\n        </FormControl>\r\n    );\r\n};","export const requiredField = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxlength) => (value) => {\r\n    if (value && value.length > maxlength) return `Max length is ${maxlength} symbols`;\r\n    return undefined;\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__I8dk8\",\"loginBlock\":\"Header_loginBlock__1ML4e\"};","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'lolloloolo', likesCount: 20},\r\n        {id: 4, message: 'sdfsdfsdfsdfsdfsdfsdfsd', likesCount: 10},\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newMessagePost,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId),\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n};\r\n\r\nexport const addPostActionCreator = (newMessagePost) => ({type: ADD_POST, newMessagePost});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId);\r\n\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}